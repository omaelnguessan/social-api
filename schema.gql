# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

interface Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Article {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  description: String!
  image: String!
  author: User
  comments(skip: Int!, take: Int!, sortBy: PaginationShortBy): ArticleCommentsPagination
}

input PaginationShortBy {
  createdAt: SortDirection
}

enum SortDirection {
  ASC
  DESC
}

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  firstName: String!
  lastName: String!
  avatar: String
  email: String!
}

type Comment {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  message: String!
}

type UserCreateOutput {
  user: User!
}

type ArticleCommentsPagination {
  totalCount: Int!
  nodes: [Comment!]!
}

type ArticleCreateOutput {
  article: Article!
}

type ArticleDeleteOutput {
  article: Article!
}

type ArticleUpdateOutput {
  article: Article!
}

type ArticlesPagination {
  totalCount: Int!
  nodes: [Article!]!
}

type AuthLoginOutput {
  accessToken: String!
}

type CommentCreateOutput {
  comment: Comment!
}

type CommentDeleteOutput {
  comment: Comment!
}

type Query {
  articlesPagination(skip: Int!, take: Int!, sortBy: ArticlesPaginationSortBy): ArticlesPagination!
}

input ArticlesPaginationSortBy {
  createdAt: SortDirection
  title: SortDirection
}

type Mutation {
  articleCreate(input: ArticleCreateInput!): ArticleCreateOutput!
  articleUpdate(articleId: ID!, input: ArticleUpdateInput!): ArticleUpdateOutput!
  articleDelete(articleId: ID!): ArticleDeleteOutput!
  userCreate(input: UserCreateInput!): UserCreateOutput!
  authLogin(username: String!, password: String!): AuthLoginOutput!
  commentCreate(input: CommentCreateInput!): CommentCreateOutput!
  commentDelete(commentId: ID!): CommentDeleteOutput!
}

input ArticleCreateInput {
  title: String!
  description: String!
  image: String!
}

input ArticleUpdateInput {
  title: String!
  description: String!
  image: String!
}

input UserCreateInput {
  firstName: String!
  lastName: String!
  avatar: String
  email: String!
  password: String!
}

input CommentCreateInput {
  message: String!
  articleId: String!
}